{"ast":null,"code":"// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return action.payload;\n\n    case 'LIKE':\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case 'CREATE':\n      return [...posts, action.payload];\n\n    case 'UPDATE':\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case 'DELETE':\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["C:/Users/eloui/OneDrive/Documents/FOLDERS/SEM/SEM6 BOOKS/SOFTWARE ENGINEERING/FILES/PROJECT(s)/Project/client/src/reducers/posts.js"],"names":["posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA;AAEA,gBAAe,YAAwB;AAAA,MAAvBA,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAOD,MAAM,CAACE,OAAd;;AACJ,SAAK,MAAL;AACI,aAAOH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACJ,SAAK,QAAL;AACI,aAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAK,QAAL;AACI,aAAOH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACJ,SAAK,QAAL;AACI,aAAOL,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD","sourcesContent":["// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ALL':\r\n            return action.payload;\r\n        case 'LIKE':\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        case 'CREATE':\r\n            return [...posts, action.payload];\r\n        case 'UPDATE':\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        case 'DELETE':\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        default:\r\n            return posts;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}